name: Deploy to GCE

on:
  workflow_dispatch: # Enables manual trigger for deployment

jobs:
  deploy-to-gce:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository (optional if configuration files are in the repo)
      - name: Checkout code
        uses: actions/checkout@v3

      # Authenticate with Google Cloud
      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      # Set up gcloud CLI
      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          skip_install: false
          version: latest

      - name: Pull Docker image from GAR
        run: |
          # Define the Artifact Registry image name
          IMAGE_NAME=us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/my-repo/flask-app

          # List all images, sort by the most recent, and get the most recent tag
          MOST_RECENT_TAG=$(gcloud artifacts docker images list $IMAGE_NAME \
            --project=${{ secrets.GCP_PROJECT_ID }} \
            --sort-by="~timestamp.datetime" \
            --limit=1 \
            --format="value(tags[0])")

          # Check if a tag is found
          if [ -z "$MOST_RECENT_TAG" ]; then
            echo "No images found for the repository."
            exit 1
          else
            echo "Pulling image with tag: $MOST_RECENT_TAG"
            docker pull $IMAGE_NAME:$MOST_RECENT_TAG
          fi

      # Deploy the image to GCE
      - name: Deploy to GCE
        run: |
          IMAGE_NAME=us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/my-repo/flask-app:$MOST_RECENT_TAG
          gcloud compute instances create gce-flask-app \
            --zone=us-central1-a \
            --machine-type=e2-medium \
            --container-image=$IMAGE_NAME \
            --tags=http-server,https-server \
            --restart-on-failure \
            --metadata=startup-script='#!/bin/bash
            # Optional: Install additional dependencies or perform configuration here
            echo "Starting Docker container on GCE instance"'
